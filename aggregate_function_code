-- Task 4
-- aggregate function queries
-- (sum) Find the total revenue collected from all rentals
USE carrental;
SELECT SUM(Amount_Due) AS Total_Revenue FROM RENTALS;
-- Find the total amount collected through each payment method
SELECT Payment_Method, SUM(Amount_Paid) AS Total_Collected FROM PAYMENT GROUP BY Payment_Method;
-- Count the total number of customers
SELECT COUNT(*) AS Total_Customers FROM CUSTOMER;
-- Count how many cars are available in the system
SELECT COUNT(*) AS Total_Cars FROM CAR WHERE IsAvailable = TRUE;
-- Find the average daily rental rate for all cars
SELECT AVG(DailyRate) AS Avg_Daily_Rate FROM CAR;
-- Find the average number of days for rentals
SELECT AVG(Total_Days) AS Avg_Rental_Duration FROM RENTALS;
-- GROUP BY Queries
-- Group cars by type and show the count for each type
SELECT Type, COUNT(*) AS Total_Cars FROM CAR GROUP BY Type;
-- Group rentals by rental type and show average total days
SELECT Rental_Type, AVG(Total_Days) AS Avg_Days FROM RENTALS GROUP BY Rental_Type;
-- HAVING (Filtering Groups)
-- Show car types where total revenue is greater than ₹30,000
SELECT c.Type, SUM(r.Amount_Due) AS Total_Revenue
FROM RENTALS r
JOIN CAR c ON r.Vehicle_ID = c.Vehicle_ID
GROUP BY c.Type
HAVING SUM(r.Amount_Due) > 30000;
-- List customers who have spent more than ₹10,000
SELECT c.Name, SUM(p.Amount_Paid) AS Total_Spent
FROM CUSTOMER c
JOIN RENTALS r ON c.Cust_ID = r.Cust_ID
JOIN PAYMENT p ON r.Rental_No = p.Rental_No
GROUP BY c.Name
HAVING SUM(p.Amount_Paid) > 10000;
